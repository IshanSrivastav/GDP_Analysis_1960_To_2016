# -*- coding: utf-8 -*-
"""GDP_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RDsOQ3rExl_KviTRDldumO1Ofaof1YhR
"""

import pandas as pd

"""# Dataset Walkthrough"""

df = pd.read_csv('gdp.csv')

df.head()

df.isnull().sum()

"""## Check Description Of Each Column"""

df['Country Name'].describe()

df['Country Code'].describe()

df['Year'].describe()

df['Year'].min()

df['Year'].max()

"""## Analysing Arab World"""

df_pr = df[df['Country Name'] == 'Arab World']

df_pr.head()

df_pr.plot(kind = 'line', x = 'Year', y = 'Value', figsize = (8,5), grid = True, ylabel = 'GDP', xlabel = 'YEARS')

"""# GDP Growth of a Country

For example if we want to find the GDP Growth In Year 1969 in Arab World as per our data we will compare
1969 with previous year 1968 data
In
1968 -> 2576 we had example
 and in 1969 -> 2834 we had
"""

round(((2834 - 2576) / 2576)*100,2) # which means we had a gdp growth of 10.02 percent in 1969 year

data = df_pr.values

gdp_change = [0]

for i in range(1,len(data)):

  prev = data[i-1][3]
  cur = data[i][3]

  gdp_change.append(round(((cur - prev) / prev)*100,2))

df_pr = df_pr.assign(GDP_Percent = gdp_change)

df_pr

"""#  GDP Growth on whole Dataset"""

df['Country Name'].unique() #Finding Unique Country Names In Our Data

final_data = []

for country_name in df['Country Name'].unique():

  df_pr = df[df['Country Name'] == country_name]

  data = df_pr.values

  gdp_change = [0]

  for i in range(1,len(data)):

    prev = data[i-1][3]
    cur = data[i][3]

    gdp_change.append(round(((cur - prev) / prev)*100,2))

  df_pr = df_pr.assign(GDP_Percent = gdp_change)
  final_data.append(df_pr)

# Since The Printed DataFrame Is In List Format We Will Concat It.

#final_data # Please Remove The(#) before the final_data to see the dataframe due too long run this has been commented out.

df = pd.concat(final_data, axis = 0) # The Axis Depends Here On Row Wise Or Column Wise .

df.head() # Here Is A New DataSet Created With GDP In Percent

df.groupby('Country Name').max()['Value'].sort_values(ascending=False).head(50) # Here We Can See The DataSet Also Contains Some Groups For The Countries
# But We Will Ignore And See The Single Countries Accordingly. You Can Also Clean Depends On Your Preference.

"""# Plotting Graphs Using Plotly"""

!pip install plotly #For Offline Environment Please Install THe Package

import plotly.express as px
import plotly.offline as pyo

# Repeated Step For Understanding

final_data = []

for country_name in df['Country Name'].unique():

  df_pr = df[df['Country Name'] == country_name]

  data = df_pr.values

  gdp_change = [0]

  for i in range(1,len(data)):

    prev = data[i-1][3]
    cur = data[i][3]

    gdp_change.append(round(((cur - prev) / prev)*100,2))

  df_pr = df_pr.assign(GDP_Percent = gdp_change)
  final_data.append(df_pr)

df = pd.concat(final_data, axis = 0)

df_pr = df[df['Country Name'] == 'World']

fig = px.line(df_pr, x = 'Year', y = 'Value', title = 'World GDP Analysis')

fig

df_pr = df[df['Country Name'] == 'India']

fig = px.line(df_pr, x = 'Year', y = 'Value', title = 'India GDP Analysis')

fig

df_pr = df[df['Country Name'] == 'India']

fig = px.line(df_pr, x = 'Year', y = 'Value', title = 'India GDP Analysis Vs World 80 Trillion', range_y = [0,  80000000000000])

fig

df_pr = df[df['Country Name'] == 'India']

fig = px.line(df_pr, x = 'Year', y = 'Value', title = 'India GDP Analysis', range_y = [0,  4000000000000])

fig

pyo.plot(fig, filename = 'India GDP.html') # This Step Will Download The Graph For Offline View.

"""# Plotting Graphs in Bulk"""

# Repeated Step For Understanding (This Can Also Be Seperated For Only Plotting Graphs In Bulk)

import os
import pandas as pd
import plotly.express as px
import plotly.offline as pyo

df = pd.read_csv('gdp.csv')

final_data = []

for country_name in df['Country Name'].unique():

  df_pr = df[df['Country Name'] == country_name]

  data = df_pr.values

  gdp_change = [0]

  for i in range(1,len(data)):

    prev = data[i-1][3]
    cur = data[i][3]

    gdp_change.append(round(((cur - prev) / prev)*100,2))

  df_pr = df_pr.assign(GDP_Percent = gdp_change)
  final_data.append(df_pr)

df = pd.concat(final_data, axis = 0)

df.head()

df['Country Name'].nunique()

"""#### GDP Of Each Country"""

# Automated step to create a directory and save the plots of graph of almost 256 unique country & group of our given data.
# Without A Specific Range

os.mkdir('GDP Individual') # This Step Will create a directory

for country_name in df['Country Name'].unique():

    df_pr = df[df['Country Name'] == country_name]

    fig = px.line(df_pr, x = 'Year', y = 'Value', title = country_name +  ' GDP Analysis')

    pyo.plot(fig, filename = 'GDP Individual/' + country_name + '.html', auto_open = False)

"""#### GDP Of Each Country WRT World 80Trillion Range"""

os.mkdir('GDP Individual WRT WORLD') # This Step Will create a directory

for country_name in df['Country Name'].unique():

    df_pr = df[df['Country Name'] == country_name]

    fig = px.line(df_pr, x = 'Year', y = 'Value', title = country_name +  ' GDP Analysis', range_y = [0,  80000000000000])

    pyo.plot(fig, filename = 'GDP Individual WRT WORLD/' + country_name + '.html', auto_open = False)

"""#Compare GDP across Countries"""

df

# Here We Are Making A Graph Compareing All The Countries GDP
fig = px.line(df, x = 'Year', y = 'Value', title = 'GDP Analysis Of All Countries', color = 'Country Name')

pyo.plot(fig, filename = 'Countries GDP.html')

"""#### Comparison Based On 2 Countries"""

c1 = df[df['Country Name'] == 'China']
c2 = df[df['Country Name'] == 'India']

c1.head()

df_pr = pd.concat([c1,c2], axis = 0)

df_pr

# Here We Are Making A Graph Compareing Two Countries GDP
fig = px.line(df_pr, x = 'Year', y = 'Value', title = 'GDP Analysis Compareing Two Countries', color = 'Country Name')

pyo.plot(fig, filename = 'Compareing Two Countries GDP.html')

c1 = df[df['Country Name'] == 'China']
c2 = df[df['Country Name'] == 'World']

df_pr = pd.concat([c1,c2], axis = 0)

fig = px.line(df_pr, x = 'Year', y = 'Value', title = 'GDP Analysis Compareing 1 Country & World', color = 'Country Name')

pyo.plot(fig, filename = 'Compareing 1 Country & World GDP.html')

"""#Compare GDP across Countries Advanced"""

# Automated Code Based On Country Code If We Change Code We Can Compare Diff Country

lst = ['ITA', 'IND', 'USA', 'CHN']

dfs = []

for i in lst:
    dfs.append(df[df['Country Code'] == i])

    df_pr = pd.concat(dfs, axis = 0)

df_pr['Country Name'].unique()

fig = px.line(df_pr, x = 'Year', y = 'Value', title = 'GDP Analysis Based - ' + '|'.join(lst), color = 'Country Name')

pyo.plot(fig, filename = '|'.join(lst) + '.html')

# Making The Function (Automated Code For Diff Country GDP Comparison)

# Example-> lst = ['ITA', 'IND', 'USA', 'CHN']

def compare_gdp(lst):

  dfs = []
  for i in lst:
      dfs.append(df[df['Country Code'] == i])

      df_pr = pd.concat(dfs, axis = 0)

      fig = px.line(df_pr, x = 'Year', y = 'Value', title = 'GDP Analysis Based - ' + '|'.join(lst), color = 'Country Name')
      pyo.plot(fig, filename = '|'.join(lst) + '.html')

compare_gdp(['CHN','USA'])

